# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/referee_hub
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: referee_hub
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: referee_hub
          POSTGRES_DB: referee_hub_test
          POSTGRES_PASSWORD: ""
      - image: circleci/redis:4.0.9-alpine

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - yarn-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
          - yarn-dependencies-

      - run:
          name: update yarn
          command: curl -o- -L https://yarnpkg.com/install.sh | bash

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
          command: yarn install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

  test_ruby:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: referee_hub
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: referee_hub
          POSTGRES_DB: referee_hub_test
          POSTGRES_PASSWORD: ""
      - image: circleci/redis:4.0.9-alpine
    steps:
      # run tests!
      - run:
        name: run ruby tests
        command: |
          mkdir /tmp/test-results
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

          bundle exec rspec $TEST_FILES
        test:
          post:
            - bash <(curl -s https://codecov.io/bash)

    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results

  test_js:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: referee_hub
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: referee_hub
          POSTGRES_DB: referee_hub_test
          POSTGRES_PASSWORD: ""
      - image: circleci/redis:4.0.9-alpine
    steps:
      - run:
        name: run js test
        command: yarn test
      - run:
        name: Generate code coverage
        command: './node_modules/.bin/nyc report --reporter=text-lcov'
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test_ruby:
          requires:
            - build
      - test_js:
          requires:
            - build
