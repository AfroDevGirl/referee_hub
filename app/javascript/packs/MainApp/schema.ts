/* tslint:disable */


/**
 * AUTO-GENERATED FILE @ 2020-04-08 16:16:51 - DO NOT EDIT!
 *
 * This file was automatically generated by schemats v.3.0.3
 * $ schemats generate -c postgres://username:password@localhost/referee_hub_development -C -t policy_manager_terms -t national_governing_bodies -t test_attempts -t referee_teams -t answers -t tests -t exported_csvs -t policy_manager_portability_requests -t referee_certifications -t policy_manager_user_terms -t teams -t flipper_features -t users -t national_governing_body_stats -t roles -t national_governing_body_admins -t referee_answers -t social_accounts -t certifications -t ar_internal_metadata -t schema_migrations -t referee_locations -t flipper_gates -t test_results -t questions -t team_status_changesets -s public
 *
 */


export namespace PolicyManagerTermsFields {
    export type id = number;
    export type description = string | null;
    export type rule = string | null;
    export type state = string | null;
    export type acceptedAt = Date | null;
    export type rejectedAt = Date | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface PolicyManagerTerms {
    id: PolicyManagerTermsFields.id;
    description: PolicyManagerTermsFields.description;
    rule: PolicyManagerTermsFields.rule;
    state: PolicyManagerTermsFields.state;
    acceptedAt: PolicyManagerTermsFields.acceptedAt;
    rejectedAt: PolicyManagerTermsFields.rejectedAt;
    createdAt: PolicyManagerTermsFields.createdAt;
    updatedAt: PolicyManagerTermsFields.updatedAt;

}

export namespace NationalGoverningBodiesFields {
    export type id = number;
    export type name = string;
    export type website = string | null;
    export type createdAt = Date;
    export type updatedAt = Date;
    export type playerCount = number;
    export type imageUrl = string | null;
    export type country = string | null;
    export type acronym = string | null;
    export type region = number | null;

}

export interface NationalGoverningBodies {
    id: NationalGoverningBodiesFields.id;
    name: NationalGoverningBodiesFields.name;
    website: NationalGoverningBodiesFields.website;
    createdAt: NationalGoverningBodiesFields.createdAt;
    updatedAt: NationalGoverningBodiesFields.updatedAt;
    playerCount: NationalGoverningBodiesFields.playerCount;
    imageUrl: NationalGoverningBodiesFields.imageUrl;
    country: NationalGoverningBodiesFields.country;
    acronym: NationalGoverningBodiesFields.acronym;
    region: NationalGoverningBodiesFields.region;

}

export namespace TestAttemptsFields {
    export type id = number;
    export type testId = number | null;
    export type refereeId = number | null;
    export type testLevel = number | null;
    export type nextAttemptAt = Date | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface TestAttempts {
    id: TestAttemptsFields.id;
    testId: TestAttemptsFields.testId;
    refereeId: TestAttemptsFields.refereeId;
    testLevel: TestAttemptsFields.testLevel;
    nextAttemptAt: TestAttemptsFields.nextAttemptAt;
    createdAt: TestAttemptsFields.createdAt;
    updatedAt: TestAttemptsFields.updatedAt;

}

export namespace RefereeTeamsFields {
    export type id = number;
    export type teamId = number | null;
    export type refereeId = number | null;
    export type associationType = number | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface RefereeTeams {
    id: RefereeTeamsFields.id;
    teamId: RefereeTeamsFields.teamId;
    refereeId: RefereeTeamsFields.refereeId;
    associationType: RefereeTeamsFields.associationType;
    createdAt: RefereeTeamsFields.createdAt;
    updatedAt: RefereeTeamsFields.updatedAt;

}

export namespace AnswersFields {
    export type id = number;
    export type questionId = number;
    export type description = string;
    export type correct = boolean;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface Answers {
    id: AnswersFields.id;
    questionId: AnswersFields.questionId;
    description: AnswersFields.description;
    correct: AnswersFields.correct;
    createdAt: AnswersFields.createdAt;
    updatedAt: AnswersFields.updatedAt;

}

export namespace TestsFields {
    export type id = number;
    export type level = number | null;
    export type name = string | null;
    export type certificationId = number | null;
    export type createdAt = Date;
    export type updatedAt = Date;
    export type description = string;
    export type timeLimit = number;
    export type minimumPassPercentage = number;
    export type positiveFeedback = string | null;
    export type negativeFeedback = string | null;
    export type language = string | null;
    export type active = boolean;
    export type testableQuestionCount = number;

}

export interface Tests {
    id: TestsFields.id;
    level: TestsFields.level;
    name: TestsFields.name;
    certificationId: TestsFields.certificationId;
    createdAt: TestsFields.createdAt;
    updatedAt: TestsFields.updatedAt;
    description: TestsFields.description;
    timeLimit: TestsFields.timeLimit;
    minimumPassPercentage: TestsFields.minimumPassPercentage;
    positiveFeedback: TestsFields.positiveFeedback;
    negativeFeedback: TestsFields.negativeFeedback;
    language: TestsFields.language;
    active: TestsFields.active;
    testableQuestionCount: TestsFields.testableQuestionCount;

}

export namespace ExportedCsvsFields {
    export type id = number;
    export type type = string | null;
    export type userId = number;
    export type url = string | null;
    export type processedAt = Date | null;
    export type sentAt = Date | null;
    export type exportOptions = Object;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface ExportedCsvs {
    id: ExportedCsvsFields.id;
    type: ExportedCsvsFields.type;
    userId: ExportedCsvsFields.userId;
    url: ExportedCsvsFields.url;
    processedAt: ExportedCsvsFields.processedAt;
    sentAt: ExportedCsvsFields.sentAt;
    exportOptions: ExportedCsvsFields.exportOptions;
    createdAt: ExportedCsvsFields.createdAt;
    updatedAt: ExportedCsvsFields.updatedAt;

}

export namespace PolicyManagerPortabilityRequestsFields {
    export type id = number;
    export type userId = number | null;
    export type state = string | null;
    export type expireAt = Date | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface PolicyManagerPortabilityRequests {
    id: PolicyManagerPortabilityRequestsFields.id;
    userId: PolicyManagerPortabilityRequestsFields.userId;
    state: PolicyManagerPortabilityRequestsFields.state;
    expireAt: PolicyManagerPortabilityRequestsFields.expireAt;
    createdAt: PolicyManagerPortabilityRequestsFields.createdAt;
    updatedAt: PolicyManagerPortabilityRequestsFields.updatedAt;

}

export namespace RefereeCertificationsFields {
    export type id = number;
    export type refereeId = number;
    export type certificationId = number;
    export type receivedAt = Date | null;
    export type revokedAt = Date | null;
    export type renewedAt = Date | null;
    export type createdAt = Date;
    export type updatedAt = Date;
    export type needsRenewalAt = Date | null;

}

export interface RefereeCertifications {
    id: RefereeCertificationsFields.id;
    refereeId: RefereeCertificationsFields.refereeId;
    certificationId: RefereeCertificationsFields.certificationId;
    receivedAt: RefereeCertificationsFields.receivedAt;
    revokedAt: RefereeCertificationsFields.revokedAt;
    renewedAt: RefereeCertificationsFields.renewedAt;
    createdAt: RefereeCertificationsFields.createdAt;
    updatedAt: RefereeCertificationsFields.updatedAt;
    needsRenewalAt: RefereeCertificationsFields.needsRenewalAt;

}

export namespace PolicyManagerUserTermsFields {
    export type id = number;
    export type userId = number | null;
    export type termId = number | null;
    export type state = string | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface PolicyManagerUserTerms {
    id: PolicyManagerUserTermsFields.id;
    userId: PolicyManagerUserTermsFields.userId;
    termId: PolicyManagerUserTermsFields.termId;
    state: PolicyManagerUserTermsFields.state;
    createdAt: PolicyManagerUserTermsFields.createdAt;
    updatedAt: PolicyManagerUserTermsFields.updatedAt;

}

export namespace TeamsFields {
    export type id = number;
    export type name = string;
    export type city = string;
    export type state = string | null;
    export type country = string;
    export type status = number | null;
    export type groupAffiliation = number | null;
    export type nationalGoverningBodyId = number | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface Teams {
    id: TeamsFields.id;
    name: TeamsFields.name;
    city: TeamsFields.city;
    state: TeamsFields.state;
    country: TeamsFields.country;
    status: TeamsFields.status;
    groupAffiliation: TeamsFields.groupAffiliation;
    nationalGoverningBodyId: TeamsFields.nationalGoverningBodyId;
    createdAt: TeamsFields.createdAt;
    updatedAt: TeamsFields.updatedAt;

}

export namespace FlipperFeaturesFields {
    export type id = number;
    export type key = string;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface FlipperFeatures {
    id: FlipperFeaturesFields.id;
    key: FlipperFeaturesFields.key;
    createdAt: FlipperFeaturesFields.createdAt;
    updatedAt: FlipperFeaturesFields.updatedAt;

}

export namespace UsersFields {
    export type id = number;
    export type email = string;
    export type encryptedPassword = string;
    export type resetPasswordToken = string | null;
    export type resetPasswordSentAt = Date | null;
    export type rememberCreatedAt = Date | null;
    export type signInCount = number;
    export type currentSignInAt = Date | null;
    export type lastSignInAt = Date | null;
    export type currentSignInIp = string | null;
    export type lastSignInIp = string | null;
    export type firstName = string | null;
    export type lastName = string | null;
    export type bio = string | null;
    export type pronouns = string | null;
    export type showPronouns = boolean | null;
    export type createdAt = Date;
    export type updatedAt = Date;
    export type submittedPaymentAt = Date | null;
    export type gettingStartedDismissedAt = Date | null;
    export type admin = boolean | null;
    export type confirmationToken = string | null;
    export type confirmedAt = Date | null;
    export type confirmationSentAt = Date | null;
    export type failedAttempts = number;
    export type unlockToken = string | null;
    export type lockedAt = Date | null;
    export type invitationToken = string | null;
    export type invitationCreatedAt = Date | null;
    export type invitationSentAt = Date | null;
    export type invitationAcceptedAt = Date | null;
    export type invitationLimit = number | null;
    export type invitedByType = string | null;
    export type invitedById = number | null;
    export type invitationsCount = number | null;
    export type exportName = boolean | null;

}

export interface Users {
    id: UsersFields.id;
    email: UsersFields.email;
    encryptedPassword: UsersFields.encryptedPassword;
    resetPasswordToken: UsersFields.resetPasswordToken;
    resetPasswordSentAt: UsersFields.resetPasswordSentAt;
    rememberCreatedAt: UsersFields.rememberCreatedAt;
    signInCount: UsersFields.signInCount;
    currentSignInAt: UsersFields.currentSignInAt;
    lastSignInAt: UsersFields.lastSignInAt;
    currentSignInIp: UsersFields.currentSignInIp;
    lastSignInIp: UsersFields.lastSignInIp;
    firstName: UsersFields.firstName;
    lastName: UsersFields.lastName;
    bio: UsersFields.bio;
    pronouns: UsersFields.pronouns;
    showPronouns: UsersFields.showPronouns;
    createdAt: UsersFields.createdAt;
    updatedAt: UsersFields.updatedAt;
    submittedPaymentAt: UsersFields.submittedPaymentAt;
    gettingStartedDismissedAt: UsersFields.gettingStartedDismissedAt;
    admin: UsersFields.admin;
    confirmationToken: UsersFields.confirmationToken;
    confirmedAt: UsersFields.confirmedAt;
    confirmationSentAt: UsersFields.confirmationSentAt;
    failedAttempts: UsersFields.failedAttempts;
    unlockToken: UsersFields.unlockToken;
    lockedAt: UsersFields.lockedAt;
    invitationToken: UsersFields.invitationToken;
    invitationCreatedAt: UsersFields.invitationCreatedAt;
    invitationSentAt: UsersFields.invitationSentAt;
    invitationAcceptedAt: UsersFields.invitationAcceptedAt;
    invitationLimit: UsersFields.invitationLimit;
    invitedByType: UsersFields.invitedByType;
    invitedById: UsersFields.invitedById;
    invitationsCount: UsersFields.invitationsCount;
    exportName: UsersFields.exportName;

}

export namespace NationalGoverningBodyStatsFields {
    export type id = number;
    export type nationalGoverningBodyId = number | null;
    export type totalRefereesCount = number | null;
    export type headRefereesCount = number | null;
    export type assistantRefereesCount = number | null;
    export type snitchRefereesCount = number | null;
    export type competitiveTeamsCount = number | null;
    export type developingTeamsCount = number | null;
    export type inactiveTeamsCount = number | null;
    export type youthTeamsCount = number | null;
    export type universityTeamsCount = number | null;
    export type communityTeamsCount = number | null;
    export type teamStatusChangeCount = number | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface NationalGoverningBodyStats {
    id: NationalGoverningBodyStatsFields.id;
    nationalGoverningBodyId: NationalGoverningBodyStatsFields.nationalGoverningBodyId;
    totalRefereesCount: NationalGoverningBodyStatsFields.totalRefereesCount;
    headRefereesCount: NationalGoverningBodyStatsFields.headRefereesCount;
    assistantRefereesCount: NationalGoverningBodyStatsFields.assistantRefereesCount;
    snitchRefereesCount: NationalGoverningBodyStatsFields.snitchRefereesCount;
    competitiveTeamsCount: NationalGoverningBodyStatsFields.competitiveTeamsCount;
    developingTeamsCount: NationalGoverningBodyStatsFields.developingTeamsCount;
    inactiveTeamsCount: NationalGoverningBodyStatsFields.inactiveTeamsCount;
    youthTeamsCount: NationalGoverningBodyStatsFields.youthTeamsCount;
    universityTeamsCount: NationalGoverningBodyStatsFields.universityTeamsCount;
    communityTeamsCount: NationalGoverningBodyStatsFields.communityTeamsCount;
    teamStatusChangeCount: NationalGoverningBodyStatsFields.teamStatusChangeCount;
    createdAt: NationalGoverningBodyStatsFields.createdAt;
    updatedAt: NationalGoverningBodyStatsFields.updatedAt;

}

export namespace RolesFields {
    export type id = number;
    export type userId = number | null;
    export type accessType = number;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface Roles {
    id: RolesFields.id;
    userId: RolesFields.userId;
    accessType: RolesFields.accessType;
    createdAt: RolesFields.createdAt;
    updatedAt: RolesFields.updatedAt;

}

export namespace NationalGoverningBodyAdminsFields {
    export type id = number;
    export type userId = number;
    export type nationalGoverningBodyId = number;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface NationalGoverningBodyAdmins {
    id: NationalGoverningBodyAdminsFields.id;
    userId: NationalGoverningBodyAdminsFields.userId;
    nationalGoverningBodyId: NationalGoverningBodyAdminsFields.nationalGoverningBodyId;
    createdAt: NationalGoverningBodyAdminsFields.createdAt;
    updatedAt: NationalGoverningBodyAdminsFields.updatedAt;

}

export namespace RefereeAnswersFields {
    export type id = number;
    export type refereeId = number;
    export type testId = number;
    export type questionId = number;
    export type answerId = number;
    export type testAttemptId = number;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface RefereeAnswers {
    id: RefereeAnswersFields.id;
    refereeId: RefereeAnswersFields.refereeId;
    testId: RefereeAnswersFields.testId;
    questionId: RefereeAnswersFields.questionId;
    answerId: RefereeAnswersFields.answerId;
    testAttemptId: RefereeAnswersFields.testAttemptId;
    createdAt: RefereeAnswersFields.createdAt;
    updatedAt: RefereeAnswersFields.updatedAt;

}

export namespace SocialAccountsFields {
    export type id = number;
    export type ownableType = string | null;
    export type ownableId = number | null;
    export type url = string;
    export type accountType = number;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface SocialAccounts {
    id: SocialAccountsFields.id;
    ownableType: SocialAccountsFields.ownableType;
    ownableId: SocialAccountsFields.ownableId;
    url: SocialAccountsFields.url;
    accountType: SocialAccountsFields.accountType;
    createdAt: SocialAccountsFields.createdAt;
    updatedAt: SocialAccountsFields.updatedAt;

}

export namespace CertificationsFields {
    export type id = number;
    export type level = number;
    export type displayName = string;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface Certifications {
    id: CertificationsFields.id;
    level: CertificationsFields.level;
    displayName: CertificationsFields.displayName;
    createdAt: CertificationsFields.createdAt;
    updatedAt: CertificationsFields.updatedAt;

}

export namespace ArInternalMetadataFields {
    export type key = string;
    export type value = string | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface ArInternalMetadata {
    key: ArInternalMetadataFields.key;
    value: ArInternalMetadataFields.value;
    createdAt: ArInternalMetadataFields.createdAt;
    updatedAt: ArInternalMetadataFields.updatedAt;

}

export namespace SchemaMigrationsFields {
    export type version = string;

}

export interface SchemaMigrations {
    version: SchemaMigrationsFields.version;

}

export namespace RefereeLocationsFields {
    export type id = number;
    export type refereeId = number;
    export type nationalGoverningBodyId = number;
    export type createdAt = Date;
    export type updatedAt = Date;
    export type associationType = number | null;

}

export interface RefereeLocations {
    id: RefereeLocationsFields.id;
    refereeId: RefereeLocationsFields.refereeId;
    nationalGoverningBodyId: RefereeLocationsFields.nationalGoverningBodyId;
    createdAt: RefereeLocationsFields.createdAt;
    updatedAt: RefereeLocationsFields.updatedAt;
    associationType: RefereeLocationsFields.associationType;

}

export namespace FlipperGatesFields {
    export type id = number;
    export type featureKey = string;
    export type key = string;
    export type value = string | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface FlipperGates {
    id: FlipperGatesFields.id;
    featureKey: FlipperGatesFields.featureKey;
    key: FlipperGatesFields.key;
    value: FlipperGatesFields.value;
    createdAt: FlipperGatesFields.createdAt;
    updatedAt: FlipperGatesFields.updatedAt;

}

export namespace TestResultsFields {
    export type id = number;
    export type refereeId = number;
    export type timeStarted = string | null;
    export type timeFinished = string | null;
    export type duration = string | null;
    export type percentage = number | null;
    export type pointsScored = number | null;
    export type pointsAvailable = number | null;
    export type passed = boolean | null;
    export type certificateUrl = string | null;
    export type minimumPassPercentage = number | null;
    export type createdAt = Date;
    export type updatedAt = Date;
    export type testLevel = number | null;
    export type testId = number | null;

}

export interface TestResults {
    id: TestResultsFields.id;
    refereeId: TestResultsFields.refereeId;
    timeStarted: TestResultsFields.timeStarted;
    timeFinished: TestResultsFields.timeFinished;
    duration: TestResultsFields.duration;
    percentage: TestResultsFields.percentage;
    pointsScored: TestResultsFields.pointsScored;
    pointsAvailable: TestResultsFields.pointsAvailable;
    passed: TestResultsFields.passed;
    certificateUrl: TestResultsFields.certificateUrl;
    minimumPassPercentage: TestResultsFields.minimumPassPercentage;
    createdAt: TestResultsFields.createdAt;
    updatedAt: TestResultsFields.updatedAt;
    testLevel: TestResultsFields.testLevel;
    testId: TestResultsFields.testId;

}

export namespace QuestionsFields {
    export type id = number;
    export type testId = number;
    export type description = string;
    export type pointsAvailable = number;
    export type feedback = string | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface Questions {
    id: QuestionsFields.id;
    testId: QuestionsFields.testId;
    description: QuestionsFields.description;
    pointsAvailable: QuestionsFields.pointsAvailable;
    feedback: QuestionsFields.feedback;
    createdAt: QuestionsFields.createdAt;
    updatedAt: QuestionsFields.updatedAt;

}

export namespace TeamStatusChangesetsFields {
    export type id = number;
    export type teamId = number | null;
    export type previousStatus = string | null;
    export type newStatus = string | null;
    export type createdAt = Date;
    export type updatedAt = Date;

}

export interface TeamStatusChangesets {
    id: TeamStatusChangesetsFields.id;
    teamId: TeamStatusChangesetsFields.teamId;
    previousStatus: TeamStatusChangesetsFields.previousStatus;
    newStatus: TeamStatusChangesetsFields.newStatus;
    createdAt: TeamStatusChangesetsFields.createdAt;
    updatedAt: TeamStatusChangesetsFields.updatedAt;

}
